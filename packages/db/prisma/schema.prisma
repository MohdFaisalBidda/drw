// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  username  String   @unique
  name      String?
  photo     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chats     Chat[]
  rooms     Room[]
}

model Room {
  id        String   @id @default(uuid())
  slug      String   @unique
  adminId   String
  admin     User     @relation(fields: [adminId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chats     Chat[]
  Shape     Shape[]
}

model Chat {
  id        String   @id @default(uuid())
  roomId    String
  room      Room     @relation(fields: [roomId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shape {
  id          String   @id @default(uuid())
  type        String   // "rect", "circle", "line", etc.
  x           Float
  y           Float
  strokeColor String
  strokeWidth Int
  fillColor   String
  details     Json
  roomId      String?
  room        Room?    @relation(fields: [roomId], references: [id])
  createdBy   String
  isPersonal  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}